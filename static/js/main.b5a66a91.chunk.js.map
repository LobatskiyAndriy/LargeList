{"version":3,"sources":["utils/useReferredState.js","components/List/dataList.ts","components/Time/Time.jsx","components/ListItem/styleListItem.js","utils/constants.js","redax/actions/users.js","components/SVGIcons/Helmet.jsx","components/ListItem/ListItem.js","components/LargeList/styleLargeList.js","components/LargeList/LargeList.jsx","components/LargeList/withLargeList.js","components/List/styleList.js","components/List/List.js","srceens/Main/Main.js","App.tsx","redax/reducers/users.js","redax/reducers/index.js","redax/store.js","index.tsx"],"names":["useReferredState","initialState","useState","state","setState","reference","useRef","value","current","Color","Time","time","props","seconds","className","Typography","component","variant","color","parseInt","join","replace","useStyles","makeStyles","root","whiteSpace","overflow","textOverflow","maxWidth","lineHeight","infoUser","display","alignItems","gap","distantion","separator","subTitle","activeElement","fontWeight","transition","borderColor","listNumberTest","marginRight","fontSize","awatarWrap","cursor","avataBox","borderRadius","padding","border","TYPE_REDUSER","addUsers","usersList","type","payload","selectUser","userID","Helmet","fill","xmlns","width","height","viewBox","d","class","RED","name","speed","GREEN","BLUE","ListItem","item","index","classes","dispatch","useDispatch","activeUser","useSelector","users","isActive","setIsActive","useEffect","some","ListItemAvatar","onClick","tempArray","filter","push","Avatar","ListItemText","primary","secondary","Fragment","Box","flexDirection","style","container","position","margin","listWrapper","top","left","right","bottom","overflowY","list","withLargeList","Component","getDefaultHeightWidth","checkIfVisible","heightList","rowHeight","ifLoadData","ref","map","styleList","nanoid","LinearProgress","scrollTop","visibleHeight","overScanCount","setIsFetching","stateList","setStateList","setHeightList","setIfLoadData","getHeight","length","getScrollPosition","getVisibleHeight","getOverScanCount","getWrapper","ReactDOM","findDOMNode","HeightListWraper","parseFloat","window","getComputedStyle","getPropertyValue","setScrollPosition","event","target","tempHeightScroll","ifLoaderDataList","addEventListener","e","elemPosition","App","boxShadow","List","maxWidthNumber","setMaxWidth","isFetching","FetchData","a","setTimeout","Main","Container","isLoaded","actions","rootReducer","combineReducers","usersReduser","store","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","render","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.b5a66a91.chunk.js","sourcesContent":["import { useRef, useState } from 'react';\n\nexport default function useReferredState(initialState) {\n    const [state, setState] = useState(initialState);\n    const reference = useRef(state);\n\n    const setReferredState = value => {\n        reference.current = value;\n        setState(value);\n    }\n\n    return [reference, setReferredState];\n\n}","// Список возможных цветов\nenum Color {\n    RED,\n    GREEN,\n    BLUE\n}\nexport default Color;\n// Пользователь. Позиция в рейтинговой таблице определяется позицией в \n// массиве пользователей\ninterface User {\n    // Любимый цвет\n    color: Color;\n    // Полное имя\n    name: string;\n    // Скорость выполнения заезда\n    speed: number;\n    // Время заезда. Выражено в миллисекундах\n    time: number;\n}\n\nexport const usersList: Array<User>= [\n    {\n        color: Color.RED,\n        name: \"Горбунков Михаил Лихачев\",\n        speed: 80,\n        time: 100,\n    },\n    {\n        color: Color.GREEN,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 423423,\n    },\n    {\n        color: Color.GREEN,\n        name: \"Василишин Михаил Лихачев\",\n        speed: 80,\n        time: 9010,\n    },\n    {\n        color: Color.RED,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.RED,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.GREEN,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.BLUE,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.RED,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.GREEN,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.BLUE,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.BLUE,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.GREEN,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.BLUE,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.BLUE,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.BLUE,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.RED,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.RED,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.BLUE,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.RED,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.RED,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.RED,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.RED,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.RED,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.RED,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.RED,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.RED,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.RED,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.RED,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.RED,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.RED,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.RED,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.RED,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.RED,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.RED,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.RED,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.RED,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.RED,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.RED,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.RED,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.RED,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.RED,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.RED,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.RED,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.RED,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.RED,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.RED,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.RED,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.RED,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.RED,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    },\n    {\n        color: Color.RED,\n        name: \"Михаил Лихачев\",\n        speed: 80,\n        time: 0.00,\n    }\n]","import { Typography } from '@material-ui/core'\nimport React from 'react'\n\n\ninterface TimeComponents {\n    seconds: number;\n    className: string;\n}\n\nexport const Time = ({ ...props }: TimeComponents): String => {\n\n    const { seconds, className } = props\n\n\n    const formatTime = (time: number) => {\n        return [\n            parseInt(time / 60 / 60),\n            parseInt(time / 60 % 60),\n            parseInt(time % 60)\n        ]\n            .join(\":\")\n            .replace(/\\b(\\d)\\b/g, \"0$1\")\n    }\n    return (\n        <Typography\n            className={className}\n            component=\"span\"\n            variant=\"body2\"\n            color=\"textPrimary\"\n        >\n            { formatTime(seconds)}\n        </Typography>)\n}\n\n\n","import { makeStyles } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles((makeStyles) => ({\n    root: {\n        '& .MuiTypography-body1': {\n            whiteSpace: 'nowrap',\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n            maxWidth: '200px',\n            lineHeight: 1,\n        },\n        '&:hover': {\n        },\n    },\n    infoUser: {\n        display: 'flex',\n        alignItems: 'Center',\n        gap: '10px'\n    },\n    time: {\n        color: '#9690ea',\n\n    },\n    distantion: {\n        color: '#4c92e2'\n    },\n    separator: {\n        color: '#4c92e2'\n    },\n    subTitle: {\n        color: '#acafb2'\n    },\n    activeElement: {\n\n        '& $listNumberTest': {\n            color: '#9690ea',\n            fontWeight: \"bold\",\n            transition: '.3s'\n        },\n        '& $avataBox': {\n            borderColor: '#9690ea',\n            transition: '.3s',\n        }\n\n    },\n\n    listNumberTest: {\n        marginRight: 5,\n        fontSize: 16,\n        fontWeight: \"bold\",\n        transition: '.3s'\n    },\n    awatarWrap: {\n        cursor: 'pointer',\n        display: 'flex',\n        alignItems: 'center',\n\n    },\n    avataBox: {\n        borderRadius: '50%',\n        padding: '2px',\n        border: '2px solid transparent',\n        transition: '.3s',\n        display: 'flex',\n    }\n\n}));","export const TYPE_REDUSER = {\n    SELECT_USER:'SELECT_USER',\n    ADD_USERS:'ADD_USERS',\n}","import { TYPE_REDUSER } from \"../../utils/constants\";\n\n// const entryLoaded = users => ({ type: TYPE_REDUSER.ADD_USERS, payload: users })\n\nexport const addUsers = (usersList) => ({ type: TYPE_REDUSER.ADD_USERS, payload: usersList })\n\nexport const selectUser = userID => ({ type: TYPE_REDUSER.SELECT_USER, payload: userID })\n","export const Helmet = ({ fill }) => {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\" \n            width=\"66\" \n            height=\"74\" \n            viewBox=\"0 0 66 74\" \n           \n        >\n            <path d=\"M22.087 73.7555C20.386 73.5912 18.7506 73.0817 17.2879 72.2681C16.3346 71.7422 15.4471 71.0847 14.6664 70.3123C14.2719 69.9343 13.9104 69.5234 13.5734 69.0878C10.8944 65.6364 7.20465 58.8649 4.6407 53.8274C3.90932 52.3893 3.28478 50.7129 2.75062 48.8885C1.64122 45.1083 0.950927 40.7283 0.67974 36.7591C0.589344 35.4524 0.540039 34.1787 0.540039 32.9953C0.540039 29.3138 1.14815 25.7801 2.2822 22.4848C5.78298 12.2536 14.2309 4.33991 24.7743 1.58695C25.67 1.34863 26.5822 1.15141 27.5108 0.995269C28.7352 0.781607 29.9843 0.641904 31.2581 0.58438C31.7676 0.551509 32.2771 0.535075 32.7948 0.535075C32.8523 0.526857 32.9099 0.526855 32.9674 0.526855H33.0578C33.1153 0.526855 33.1728 0.526857 33.2304 0.535075C33.7481 0.535075 34.2576 0.551509 34.7671 0.58438C36.0409 0.641904 37.29 0.781607 38.5144 0.995269C39.443 1.15141 40.3552 1.34863 41.2509 1.58695C51.8025 4.33991 60.2422 12.2618 63.743 22.4848C64.877 25.7801 65.4851 29.3138 65.4851 32.9953C65.4851 34.1787 65.4358 35.4524 65.3454 36.7591C65.0743 40.7365 64.384 45.1165 63.2746 48.8885C62.7404 50.7129 62.1158 52.3893 61.3845 53.8274C58.8205 58.8731 55.1307 65.6364 52.4517 69.0878C52.1148 69.5234 51.7532 69.9343 51.3588 70.3123C50.5781 71.0847 49.6906 71.7422 48.7373 72.2681C47.2746 73.0817 45.6392 73.5912 43.9381 73.7555H22.087Z\" fill=\"white\" />\n            <path class=\"mask\" d=\"M33.0159 54.7478C32.153 54.7478 31.2902 54.9451 30.5177 55.3231L30.1972 55.4792C27.9044 56.5968 25.3487 57.1885 22.8012 57.1885C21.3631 57.1885 19.9332 57.0077 18.5444 56.6461L17.0981 56.2681C10.3019 54.4931 5.08366 49.1597 3.49762 42.3472C2.64297 38.6903 2.39644 35.0991 2.76624 31.6641C3.02921 29.2316 5.05079 27.399 7.46681 27.399C7.76265 27.399 8.05849 27.4237 8.35433 27.4812C17.3199 29.1987 24.6995 29.9301 33.0159 29.9301C41.3323 29.9301 48.7118 29.1905 57.6774 27.4812C57.9733 27.4237 58.2691 27.399 58.565 27.399C60.981 27.399 63.0026 29.2316 63.2655 31.6641C63.6353 35.0909 63.3888 38.6903 62.5341 42.3472C60.9399 49.1597 55.7298 54.4931 48.9337 56.2681L47.4874 56.6461C46.0986 57.0077 44.6687 57.1885 43.2306 57.1885C40.6831 57.1885 38.1273 56.5968 35.8346 55.4792L35.5141 55.3231C34.7416 54.9533 33.8788 54.7478 33.0159 54.7478Z\" fill=\"#275183\" />\n            <path d=\"M33.0158 52.2824C31.7914 52.2824 30.5669 52.5618 29.4411 53.1124L29.1206 53.2685C26.0307 54.7806 22.4971 55.134 19.1689 54.2629L17.7225 53.8849C11.8468 52.3481 7.27773 47.6969 5.89714 41.7883C5.14111 38.5669 4.8617 35.1976 5.21506 31.9351C5.35477 30.6039 6.57921 29.6588 7.89406 29.9136C16.7528 31.6064 24.4036 32.4036 33.0158 32.4118C41.6281 32.4118 49.2788 31.6147 58.1376 29.9136C59.4524 29.6588 60.6687 30.6121 60.8166 31.9351C61.1699 35.1976 60.8823 38.5751 60.1345 41.7883C58.7539 47.7051 54.1848 52.3481 48.3091 53.8849L46.8628 54.2629C43.5346 55.134 40.0009 54.7806 36.911 53.2685L36.5906 53.1124C35.4647 52.5618 34.2403 52.2824 33.0158 52.2824Z\" fill=\"#A5CDFF\" />\n            <path d=\"M10.5 32.0502L11.4615 48.4858C12.3819 49.398 13.4173 50.1869 14.5514 50.8279L13.4502 32.5269C12.4805 32.3871 11.4944 32.2228 10.5 32.0502Z\" fill=\"white\" />\n            <path d=\"M14.8965 32.7406L16.0798 51.584C16.7455 51.8634 17.4275 52.1099 18.1425 52.2907L19.5888 52.6687C20.6407 52.9399 21.7254 53.0796 22.8102 53.0796C23.2375 53.0796 23.6566 53.0467 24.0839 53.0056L23.3443 33.661C20.5585 33.4555 17.7727 33.1515 14.8965 32.7406Z\" fill=\"white\" />\n            <path d=\"M59.181 32.1078C59.1482 31.7709 58.877 31.5161 58.5647 31.5161C58.5236 31.5161 58.4907 31.5161 58.4496 31.5244C57.8415 31.6394 57.2498 31.7462 56.6499 31.8531L56.124 46.6862C57.2499 45.133 58.0798 43.3498 58.5318 41.4186C59.2714 38.2547 59.4933 35.0334 59.181 32.1078Z\" fill=\"white\" />\n            <path class=\"helmet\" d=\"M24.7821 1.58694V22.3533C24.7821 24.3995 23.0071 26.0102 20.9691 25.8047C13.8771 25.098 8.73279 24.0543 2.29004 22.4847C5.7826 12.2618 14.2305 4.3399 24.7821 1.58694Z\" fill={fill} />\n            <path class=\"helmet\" d=\"M41.251 1.58694V22.3533C41.251 24.3995 43.026 26.0102 45.064 25.8047C52.156 25.098 57.3003 24.0543 63.743 22.4847C60.2505 12.2618 51.8026 4.3399 41.251 1.58694Z\" fill={fill} />\n            <path class=\"mask\" d=\"M32.9996 26.1334C32.0381 26.1334 31.2656 25.3528 31.2656 24.3995V2.26903C31.2656 1.31576 32.0299 0.535073 32.9749 0.526855C32.9914 0.526855 33.0078 0.526855 33.016 0.526855C33.0325 0.526855 33.0489 0.526855 33.0571 0.526855C34.0104 0.526855 34.7664 1.31576 34.7664 2.26903V24.3995C34.7664 25.361 33.9857 26.1334 33.0324 26.1334H32.9996Z\" fill=\"#275183\" />\n            <path class=\"helmet\" d=\"M22.0873 73.7555C20.3862 73.5912 18.7508 73.0817 17.2881 72.2681C20.8382 64.7653 26.5495 58.3472 33.0169 58.2814C39.4843 58.3472 45.1956 64.7735 48.7457 72.2681C47.283 73.0817 45.6476 73.5912 43.9465 73.7555H22.0873Z\" fill={fill} />\n            <path class=\"helmet\" d=\"M19.8923 62.1766C17.846 64.5433 16.0957 67.3374 14.6658 70.3204C14.2713 69.9424 13.9097 69.5315 13.5728 69.096C10.8938 65.6445 7.20402 58.8731 4.64008 53.8356C3.9087 52.3974 3.28416 50.721 2.75 48.8967C6.30008 55.6517 12.9154 59.0949 18.8979 59.6948C20.1388 59.8099 20.7058 61.2398 19.8923 62.1766Z\" fill={fill} />\n            <path class=\"helmet\" d=\"M46.1398 62.1766C48.1861 64.5433 49.9364 67.3374 51.3663 70.3204C51.7608 69.9424 52.1224 69.5315 52.4593 69.096C55.1383 65.6445 58.8281 58.8731 61.392 53.8356C62.1234 52.3974 62.748 50.721 63.2821 48.8967C59.732 55.6517 53.1167 59.0949 47.1342 59.6948C45.8933 59.8099 45.3263 61.2398 46.1398 62.1766Z\" fill={fill} />\n        </svg>\n    )\n}","import React, { useEffect,  useState } from 'react';\nimport { Avatar, Box, ListItem as MiListItem, ListItemAvatar, ListItemText, Typography } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Time } from '../Time/Time';\nimport { useStyles } from './styleListItem';\nimport { selectUser } from '../../redax/actions/users';\nimport { Helmet } from '../SVGIcons/Helmet';\n\nimport Color from './../List/dataList'\n\nexport const ListItem = ({ ...props }) => {\n    const { item, index } = props;\n\n    const classes = useStyles();\n\n    const dispatch = useDispatch()\n    const { activeUser } = useSelector(({ users }) => users)\n\n    const [isActive, setIsActive] = useState(false)\n\n    useEffect(() => {\n        const ifCheckActiveUsers = activeUser.some((item) => item === index);\n        if (ifCheckActiveUsers) {\n            setIsActive(true)\n        }\n    }, [activeUser])\n\n    const onClick = (index) => {\n        const ifCheckActiveUsers = activeUser.some((item) => item === index);\n        if (!ifCheckActiveUsers) {\n            let tempArray = activeUser;\n            tempArray.push(index);\n            dispatch(selectUser(tempArray))\n        } else {\n            let tempArray = activeUser.filter((item) => item !== index);\n            dispatch(selectUser(tempArray))\n        }\n    }\n\n    return (\n\n        <MiListItem className={isActive ? classes.activeElement : null} >\n            <div className={classes.listNumberTest} >{index}</div>\n            <ListItemAvatar className={classes.awatarWrap} onClick={() => onClick(index)}>\n                <div className={classes.avataBox}>\n                    <Avatar>\n                        <Helmet fill={Color[item.color]} />\n                    </Avatar>\n                </div>\n            </ListItemAvatar>\n            <ListItemText className={classes.root} primary={item.name} secondary={\n                <React.Fragment>\n                    <Box display=\"flex\" flexDirection=\"column\" >\n                        <Box className={classes.infoUser} display=\"flex\" flexDirection=\"row\" gap={5}>\n                            <Time className={classes.time} seconds={item.time} />\n\n                            <div className={classes.separator}>|</div>\n                            <Typography\n                                className={classes.distantion}\n                                component=\"span\"\n                                variant=\"body2\"\n                                color=\"textPrimary\"\n                            >\n                                80 км\n                            </Typography>\n                        </Box>\n                        <Typography className={classes.subTitle}>штрафное время 00:00:00</Typography>\n                    </Box>\n                </React.Fragment>\n            } />\n        </MiListItem>\n\n    )\n}\n","export const style = {\n    container: (props = {}) => {\n        if (!props || (!props.width || !props.height)) {\n            return {};\n        }\n\n        return {\n            width: props.width,\n            position: 'relative',\n            height: props.height,\n            margin:'0 auto',\n        };\n    },\n    listWrapper: {\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        overflowY: 'auto',\n        position: 'absolute',\n        height: \"100%\"\n    },\n    list: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute',\n        color: \"#000\"\n    })\n};\n","import React from 'react'\n\nimport { ListItem } from '../ListItem/ListItem'\nimport { nanoid } from 'nanoid';\nimport { style } from './styleLargeList';\nimport { withLargeList } from './withLargeList';\nimport { LinearProgress } from '@material-ui/core';\n\nfunction LargeList({ ...props }) {\n\n\n    const { getDefaultHeightWidth, checkIfVisible, listWrapper, usersList, heightList, rowHeight, className, ifLoadData } = props;\n\n\n    return (\n\n        <div\n            style={style.container(getDefaultHeightWidth())}\n            className={className}\n\n        >\n            <div\n                style={style.listWrapper}\n                ref={listWrapper}\n            >\n                <div\n\n                    style={style.list(heightList.current)}\n                >\n                    {usersList.map(\n                        (item, index) => {\n                            const styleList = style.item(index, rowHeight);\n                          \n\n                            return checkIfVisible(index) &&\n\n\n                                (\n                                    <div style={styleList} key={nanoid()} >\n                                        {(<ListItem item={item} index={index}></ListItem>)}\n                                    </div>\n                                )\n\n                        }\n                    )}\n                </div>\n                    {!ifLoadData.current && (<LinearProgress   />)}\n            </div>\n        </div>\n    )\n}\n\nexport default withLargeList(LargeList);\n","import React, { useEffect, useRef } from 'react'\nimport ReactDOM from 'react-dom';\nimport useReferredState from '../../utils/useReferredState';\n\nimport { useSelector } from 'react-redux'\n\n\nexport const withLargeList = Component => ({ ...props }) => {\n\n\n    let initialState = {\n        scrollTop: 0,\n        visibleHeight: 0,\n        overScanCount: 5\n    }\n\n    const { setIsFetching, className, rowHeight } = props;\n\n    const { usersList } = useSelector(({ users }) => users)\n\n    const [stateList, setStateList] = useReferredState(initialState);\n    const [heightList, setHeightList] = useReferredState(0);\n    const [ifLoadData, setIfLoadData] = useReferredState(true);\n\n    const listWrapper = useRef(null);\n\n    const getCount = () => usersList.length;\n\n    const getHeight = () => getCount() * rowHeight;\n\n    const getScrollPosition = () => stateList.current.scrollTop;\n\n    const getVisibleHeight = () => stateList.current.visibleHeight;\n\n    const getOverScanCount = () => initialState.overScanCount;\n\n    const getWrapper = () => ReactDOM.findDOMNode(listWrapper.current);\n\n    const HeightListWraper = () => parseFloat(window.getComputedStyle(getWrapper(), null).getPropertyValue('height'));\n\n    const getDefaultHeightWidth = () => className ? {} : { height: '100%', width: '100%' };\n\n    const setScrollPosition = (event) => {\n        setStateList({\n            ...stateList.current,\n            scrollTop: event.target.scrollTop\n        });\n\n        ifLoaderDataList(event);\n    };\n\n    const checkIfVisible = index => {\n        const elemPosition = index * rowHeight;\n\n        return (\n            elemPosition > getScrollPosition() - getOverScanCount() * rowHeight &&\n            elemPosition + rowHeight < getScrollPosition() + getVisibleHeight() + getOverScanCount() * rowHeight\n        );\n    };\n\n    function ifLoaderDataList(event) {\n        let tempHeightScroll = event.target.scrollTop + HeightListWraper();\n\n        if (heightList.current > 0 && (tempHeightScroll + getVisibleHeight()) > heightList.current && !!ifLoadData.current) {\n            setIfLoadData(false)\n            setIsFetching(true)\n        }\n    }\n\n    useEffect(() => {\n        getWrapper().addEventListener(\n            'scroll',\n            e => {\n                setScrollPosition(e)\n            },\n            true\n        );\n\n        setStateList({\n            ...stateList.current,\n            visibleHeight: HeightListWraper()\n        });\n\n    }, [])\n\n    useEffect(() => {\n        setHeightList(getHeight())\n        setIfLoadData(true)\n    }, [usersList])\n\n    return (<Component\n\n        getDefaultHeightWidth={getDefaultHeightWidth}\n        checkIfVisible={checkIfVisible}\n        listWrapper={listWrapper}\n        usersList={usersList}\n        heightList={heightList}\n        ifLoadData={ifLoadData}\n\n        {...props} />)\n}\n","import { makeStyles } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles(() => ({\n    App: {\n        maxWidth: '400px',\n        position: 'relative',\n        height: '100vh',\n        boxShadow: '0px 2px 1px - 1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)',\n        margin: '0 auto'\n    },\n}));","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport useReferredState from '../../utils/useReferredState';\nimport LargeList from '../LargeList/LargeList';\nimport { usersList } from './dataList';\nimport './styleList.js'\nimport { addUsers } from '../../redax/actions/users';\nimport { useStyles } from './styleList';\n\n\n\nfunction List() {\n\n    const classes = useStyles();\n\n    const dispatch = useDispatch()\n\n    const [maxWidthNumber, setMaxWidth] = useReferredState(0);\n    const [isFetching, setIsFetching] = useReferredState(false);\n\n    const fetchMoreListItems = () => {\n        setIsFetching(false)\n        FetchData()\n    }\n\n    const FetchData = async () => {\n        setTimeout(() => {\n            dispatch(addUsers(usersList))\n        }, 3000)\n    }\n\n    useEffect(() => {\n        if (!isFetching.current) return;\n        fetchMoreListItems();\n    }, [isFetching.current])\n\n    useEffect(() => {\n        dispatch(addUsers(usersList))\n    }, [])\n\n    return (\n\n        <LargeList\n            className={classes.App}\n            rowHeight={92}\n            isFetching={isFetching}\n            setIsFetching={setIsFetching}\n            maxWidthNumber={maxWidthNumber}\n            setMaxWidth={setMaxWidth}\n        >\n        </LargeList>\n\n    )\n}\n\nexport default List\n","import React from 'react'\nimport List from '../../components/List/List'\n\nimport { Container } from '@material-ui/core';\n\nexport const Main = () => {\n    return (\n\n        <Container maxWidth=\"md\">\n           \n                <List></List>\n            \n        </Container>\n\n\n    )\n}\n\n\n","import React from 'react';\nimport './App.css';\nimport { Main } from './srceens/Main/Main';\n\nfunction App() {\n  return (\n    <Main />\n  );\n}\n\nexport default App;\n","import { TYPE_REDUSER } from \"../../utils/constants\";\n\nconst initialState = {\n    usersList: [],\n    activeUser: [],\n    isLoaded: false,\n}\n\n\nconst users = (state = initialState, actions) => {\n\n    switch (actions.type) {\n        case TYPE_REDUSER.ADD_USERS:\n            return {\n                ...state,\n                usersList: [...state.usersList , ...actions.payload],\n            } \n        case TYPE_REDUSER.SELECT_USER:\n            return {\n                ...state,\n                activeUser: actions.payload,\n            } \n        default:\n            return state;\n    }\n\n\n\n\n}\n\nexport default users;","import { combineReducers } from 'redux';\nimport usersReduser from './users';\n\n\n\nconst rootReducer = combineReducers({\n    users: usersReduser,\n})\n\n\nexport default rootReducer;\n "," \nimport { applyMiddleware, compose, createStore } from 'redux'\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers'\n\n\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n));\n\nexport default store;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { CssBaseline } from '@material-ui/core';\n\nimport store from './redax/store';\nimport { Provider } from 'react-redux';\n \nReactDOM.render(\n  <Provider store={store}>\n    <CssBaseline />\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}